//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DesktopApp1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProjectEntities : DbContext
    {
        public ProjectEntities()
            : base("name=ProjectEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Pokémon> Pokémon { get; set; }
        public virtual DbSet<Trainer> Trainers { get; set; }
    
        public virtual int create_pokémon(string pName, string nickName, Nullable<int> pLevel, string pType, Nullable<int> tId)
        {
            var pNameParameter = pName != null ?
                new ObjectParameter("pName", pName) :
                new ObjectParameter("pName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("nickName", nickName) :
                new ObjectParameter("nickName", typeof(string));
    
            var pLevelParameter = pLevel.HasValue ?
                new ObjectParameter("pLevel", pLevel) :
                new ObjectParameter("pLevel", typeof(int));
    
            var pTypeParameter = pType != null ?
                new ObjectParameter("pType", pType) :
                new ObjectParameter("pType", typeof(string));
    
            var tIdParameter = tId.HasValue ?
                new ObjectParameter("tId", tId) :
                new ObjectParameter("tId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("create_pokémon", pNameParameter, nickNameParameter, pLevelParameter, pTypeParameter, tIdParameter);
        }
    
        public virtual int create_trainer(string tName, Nullable<int> nbrOfBadges)
        {
            var tNameParameter = tName != null ?
                new ObjectParameter("tName", tName) :
                new ObjectParameter("tName", typeof(string));
    
            var nbrOfBadgesParameter = nbrOfBadges.HasValue ?
                new ObjectParameter("nbrOfBadges", nbrOfBadges) :
                new ObjectParameter("nbrOfBadges", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("create_trainer", tNameParameter, nbrOfBadgesParameter);
        }
    
        public virtual int delete_pokémon(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_pokémon", pIdParameter);
        }
    
        public virtual int delete_trainer(Nullable<int> tId)
        {
            var tIdParameter = tId.HasValue ?
                new ObjectParameter("tId", tId) :
                new ObjectParameter("tId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_trainer", tIdParameter);
        }
    
        public virtual ObjectResult<Pokémon> read_all_pokémon()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pokémon>("read_all_pokémon");
        }
    
        public virtual ObjectResult<Pokémon> read_all_pokémon(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pokémon>("read_all_pokémon", mergeOption);
        }
    
        public virtual ObjectResult<Trainer> read_all_trainer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Trainer>("read_all_trainer");
        }
    
        public virtual ObjectResult<Trainer> read_all_trainer(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Trainer>("read_all_trainer", mergeOption);
        }
    
        public virtual ObjectResult<Pokémon> read_pokémon(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pokémon>("read_pokémon", pIdParameter);
        }
    
        public virtual ObjectResult<Pokémon> read_pokémon(Nullable<int> pId, MergeOption mergeOption)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pokémon>("read_pokémon", mergeOption, pIdParameter);
        }
    
        public virtual ObjectResult<Trainer> read_trainer(Nullable<int> tId)
        {
            var tIdParameter = tId.HasValue ?
                new ObjectParameter("tId", tId) :
                new ObjectParameter("tId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Trainer>("read_trainer", tIdParameter);
        }
    
        public virtual ObjectResult<Trainer> read_trainer(Nullable<int> tId, MergeOption mergeOption)
        {
            var tIdParameter = tId.HasValue ?
                new ObjectParameter("tId", tId) :
                new ObjectParameter("tId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Trainer>("read_trainer", mergeOption, tIdParameter);
        }
    
        public virtual int update_pokémon(string pName, string nickName, Nullable<int> pLevel, string pType, Nullable<int> tId, Nullable<int> pId)
        {
            var pNameParameter = pName != null ?
                new ObjectParameter("pName", pName) :
                new ObjectParameter("pName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("nickName", nickName) :
                new ObjectParameter("nickName", typeof(string));
    
            var pLevelParameter = pLevel.HasValue ?
                new ObjectParameter("pLevel", pLevel) :
                new ObjectParameter("pLevel", typeof(int));
    
            var pTypeParameter = pType != null ?
                new ObjectParameter("pType", pType) :
                new ObjectParameter("pType", typeof(string));
    
            var tIdParameter = tId.HasValue ?
                new ObjectParameter("tId", tId) :
                new ObjectParameter("tId", typeof(int));
    
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_pokémon", pNameParameter, nickNameParameter, pLevelParameter, pTypeParameter, tIdParameter, pIdParameter);
        }
    
        public virtual int update_trainer(string tName, Nullable<int> nbrOfBadges, Nullable<int> tId)
        {
            var tNameParameter = tName != null ?
                new ObjectParameter("tName", tName) :
                new ObjectParameter("tName", typeof(string));
    
            var nbrOfBadgesParameter = nbrOfBadges.HasValue ?
                new ObjectParameter("nbrOfBadges", nbrOfBadges) :
                new ObjectParameter("nbrOfBadges", typeof(int));
    
            var tIdParameter = tId.HasValue ?
                new ObjectParameter("tId", tId) :
                new ObjectParameter("tId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_trainer", tNameParameter, nbrOfBadgesParameter, tIdParameter);
        }
    
        public virtual ObjectResult<Pokémon> read_pokemon_trainer(Nullable<int> tId)
        {
            var tIdParameter = tId.HasValue ?
                new ObjectParameter("tId", tId) :
                new ObjectParameter("tId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pokémon>("read_pokemon_trainer", tIdParameter);
        }
    
        public virtual ObjectResult<Pokémon> read_pokemon_trainer(Nullable<int> tId, MergeOption mergeOption)
        {
            var tIdParameter = tId.HasValue ?
                new ObjectParameter("tId", tId) :
                new ObjectParameter("tId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pokémon>("read_pokemon_trainer", mergeOption, tIdParameter);
        }
    }
}
